---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app teleport
spec:
  interval: 30m
  chart:
    spec:
      chart: teleport-cluster
      version: 17.0.1
      sourceRef:
        kind: HelmRepository
        name: teleport
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    clusterName: teleport.${SECRET_EXTERNAL_DOMAIN}
    chartMode: standalone
    kubeClusterName: arc1
    validateConfigOnDeploy: true
    enterprise: false
    auth:
      annotations:
        deployment:
          reloader.stakater.com/auto: "true"
      teleportConfig:
        auth_service:
          client_idle_timeout: 2h
          client_idle_timeout_message: "Connection closed after 2hours without activity"
          session_recording: "off"
    proxy:
      annotations:
        deployment:
          reloader.stakater.com/auto: "true"
      teleportConfig:
        proxy_service:
          trust_x_forwarded_for: true
    podSecurityPolicy:
      enabled: true
    log:
      level: INFO
      output: stderr
      format: text
      extraFields: ["timestamp", "level", "component", "caller"]
    ingress:
      enabled: true
      suppressAutomaticWildcards: false
      spec:
        ingressClassName: traefik-external
    annotations:
      ingress:
        external-dns.alpha.kubernetes.io/hostname: "teleport.${SECRET_EXTERNAL_DOMAIN}"
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Services
        gethomepage.dev/name: Teleport
        gethomepage.dev/description: Teleport dashboard
        gethomepage.dev/icon: teleport
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      service:
        traefik.ingress.kubernetes.io/service.serversscheme: https
    highAvailability:
      certManager:
        enabled: true
        issuerName: "letsencrypt-production"
        issuerKind: "ClusterIssuer"
    #    tls:
    #      existingSecretName: teleport-tls
    authentication:
      type: local
    proxyListenerMode: multiplex
    persistence:
      enabled: true
      existingClaimName: teleport
    serviceAccount:
      create: true
    rbac:
      create: true
    service:
      type: ClusterIP
