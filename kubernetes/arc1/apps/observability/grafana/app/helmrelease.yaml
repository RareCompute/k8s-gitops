---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 8.8.2
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: kube-prometheus-stack
      namespace: observability
  values:
    extraInitContainers:
      - name: 01-init-db
        image: ghcr.io/liana64/postgres-init:16
        env:
          - name: INIT_POSTGRES_DBNAME
            value: &dbName grafana
          - name: INIT_POSTGRES_HOST
            value: &dbHost postgres-1-rw.database.svc.cluster.local
          - name: INIT_POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: grafana-secret
                key: GF_DATABASE_USER
          - name: INIT_POSTGRES_PASS
            valueFrom:
              secretKeyRef:
                name: grafana-secret
                key: GF_DATABASE_PASSWORD
          - name: INIT_POSTGRES_SUPER_PASS
            valueFrom:
              secretKeyRef:
                name: cloudnative-pg-secret
                key: password
    replicas: 1
    env:
      GF_AUTH_GENERIC_OAUTH_API_URL: "https://auth.${SECRET_EXTERNAL_DOMAIN}/api/oidc/userinfo"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://auth.${SECRET_EXTERNAL_DOMAIN}/api/oidc/authorization"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://auth.${SECRET_EXTERNAL_DOMAIN}/api/oidc/token"
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: "https://grafana.${SECRET_INTERNAL_DOMAIN}"
      GF_DATABASE_SSL_MODE: disable
      GF_DATABASE_NAME: *dbName
      GF_DATABASE_HOST: *dbHost
    envFromSecrets:
      - name: grafana-secret
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      #auth:
      #  oauth_auto_login: true
      #  oauth_allow_insecure_email_lookup: true
      #auth.generic_oauth:
      #  enabled: true
      #  name: Authelia
      #  icon: signin
      #  scopes: openid profile email groups
      #  empty_scopes: false
      #  login_attribute_path: preferred_username
      #  groups_attribute_path: groups
      #  name_attribute_path: name
      #  use_pkce: true
      #auth.generic_oauth.group_mapping:
      #  org_id: 1
      #  role_attribute_path: contains(groups[*], 'admins') && 'Admin' || 'Viewer'
      auth.basic:
        enabled: true
      auth.anonymous:
        enabled: false
      news:
        news_feed_enabled: false
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://prometheus-operated.observability.svc.cluster.local:9090
            jsonData:
              timeInterval: 1m
            isDefault: true
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki.observability.svc.cluster.local:3100
            jsonData:
              maxLines: 250
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager-operated.observability.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        cert-manager:
          url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/raw/master/dashboards/cert-manager.json?ref_type=heads
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        apache-airflow:
          url: https://raw.githubusercontent.com/apache/airflow/a540eeb73f3363ebcb8ce000b77d0b7b8d04a002/scripts/ci/docker-compose/grafana/volume/dashboards/airflow_metrics.json
          datasource: Prometheus
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 18
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 19
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 42
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 41
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 32
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 34
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
        # minio:
        #   # renovate: depName="MinIO Dashboard"
        #   gnetId: 13502
        #   revision: 26
        #   datasource:
        #     - { name: DS_PROMETHEUS, value: Prometheus }
        traefik:
          url: https://raw.githubusercontent.com/traefik/traefik/aa8eb1af6eb5457516169315676ec22f968e727d/contrib/grafana/traefik-kubernetes.json
          datasource: Prometheus
        nvidia-dcgm-exporter:
          url: https://raw.githubusercontent.com/NVIDIA/dcgm-exporter/900d465675d3c227a6992b93b2206f66aa3385cd/grafana/dcgm-exporter-dashboard.json
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 37
          datasource: Prometheus
        redis:
          # renovate: depName="Redis Dashboard for Prometheus Redis Exporter 1.x"
          gnetId: 763 # https://grafana.com/grafana/dashboards/763?tab=revisions
          revision: 5
          datasource: Prometheus
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 6
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Services
        gethomepage.dev/name: Grafana
        gethomepage.dev/icon: grafana
      ingressClassName: traefik
      hosts: ["grafana.${SECRET_INTERNAL_DOMAIN}"]
      tls:
        - secretName: grafana-tls
          hosts: ["grafana.${SECRET_INTERNAL_DOMAIN}"]
    persistence:
      enabled: false
    testFramework:
      enabled: false
